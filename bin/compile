#!/usr/bin/env bash

set -e

unset GIT_DIR

buildpacks=$(cat $1/.buildpacks)
if [ -n "$TESTPACK" ] && [ -f $1/.buildpacks.test ]; then
  buildpacks=$(echo $(cat $1/.buildpacks.test) | cat - $1/.buildpacks)
fi

for BUILDPACK in $buildpacks; do
  dir=$(mktemp -t buildpackXXXXX)
  rm -rf $dir

  url=${BUILDPACK%#*}
  branch=${BUILDPACK#*#}

  if [ "$branch" == "$url" ]; then
    branch=""
  fi

  if [ "$url" != "" ]; then
    echo "=====> Downloading Buildpack: $url"

    if [[ "$url" =~ \.tgz$ ]] || [[ "$url" =~ \.tgz\? ]]; then
      mkdir -p "$dir"
      curl -s "$url" | tar xvz -C "$dir" >/dev/null 2>&1
    else
      git clone $url $dir >/dev/null 2>&1
    fi
    cd $dir

    if [ "$branch" != "" ]; then
      git checkout $branch >/dev/null 2>&1
    fi

    # we'll get errors later if these are needed and don't exist
    chmod -f +x $dir/bin/{detect,compile,release,test,test-compile} || true

    framework=$($dir/bin/detect $1)

    if [ $? == 0 ]; then
      echo "=====> Detected Framework: $framework"

      [ -n "$TESTPACK" ] && [ -x $dir/bin/test-compile ] && compile="test-compile" || compile="compile"

      $dir/bin/$compile $1 $2 $3

      if [ $? != 0 ]; then
        exit 1
      fi

      # check if the buildpack left behind an environment for subsequent ones
      if [ -e $dir/export ]; then
        source $dir/export
      fi

      if [ ! -n "$TESTPACK" ]; then
        if [ -x $dir/bin/release ]; then
          $dir/bin/release $1 > $1/last_pack_release.out
        fi
      else
        if [ -e $dir/bin/test ]; then
          if [ ! -e $1/buildpack_tests ]; then
						cat <<- EOF > $1/buildpack_tests
						#!/usr/bin/env bash

						set -e

						EOF
          fi

          cat <<- EOF >> $1/buildpack_tests
					echo "-----> Running $framework buildpack tests..."
					$dir/bin/test \$1 \$2

					if [ \$? == 0 ]; then
						echo "-----> $framework buildpack tests completed successfully"
					else
						echo "-----> $framework buildpack tests failed with exit status \$?"
					fi

					EOF
        else
          echo "-----> The $framework buildpack does not run tests. Skipping."
        fi
      fi
    else
      echo "Couldn't detect any framework for this buildpack. Exiting."
      exit 1
    fi
  fi
done

if [ ! -n "$TESTPACK" ]; then
  if [ -e $1/last_pack_release.out ]; then
    echo "Using release configuration from last framework ($framework)."
  fi
fi
